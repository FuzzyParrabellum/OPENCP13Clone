version: 2.1

orbs:
  heroku: circleci/heroku@0.0.10

jobs:
  build_and_test:
    docker:
      - image: python:3.10.8-slim-bullseye
    steps:
      - checkout
      - run:
          name: install dependencies
          command: pip install -r requirements.txt
      - run:
          name: run tests
          command: pytest --no-migrations -W ignore::DeprecationWarning
      - run:
          name: lint app
          command: flake8

  contenerize:
    docker:
      - image: cimg/base:2022.06
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
          docker_layer_caching: true
      - run: 
          name: login with docker
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - run: 
          name: build docker image with Dockerfile and add CircleCI tag hash
          command: docker build -t $DOCKERHUB_USERNAME/project13_clone:$CIRCLE_SHA1 .
      - run: 
          name: push docker image to dockerhub
          command: docker push $DOCKERHUB_USERNAME/project13_clone:$CIRCLE_SHA1

  # deploy_to_heroku:
  #   docker:
  #       - image: cimg/base:2022.06
  #         auth:
  #             username: $DOCKERHUB_USERNAME
  #             password: $DOCKERHUB_PASSWORD
  #   steps:
  #       - checkout
  #       - run:
  #           name: Deploy Master to Heroku
  #           command: |
  #             git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build_test_contenerize_deploy:
    jobs:
      - build_and_test
      - contenerize:
          requires:
            - build_and_test # only deploy if the build_and_test job has completed
          filters:
            branches:
              only: master # only deploy when on main
      # - deploy_to_heroku:
      - heroku/deploy-via-git:
          requires:
            - contenerize
          post-steps:
            - run: heroku run -a oc-lettings-clone python manage.py migrate profiles 0001_initial
            - run: heroku run -a oc-lettings-clone python manage.py migrate lettings 0001_initial
            - run: heroku run python3 manage.py loaddata data.json
          #   - run: sudo curl https://cli-assets.heroku.com/install.sh | sh
          #   - run: heroku logs --tail -a oc-lettings-clone